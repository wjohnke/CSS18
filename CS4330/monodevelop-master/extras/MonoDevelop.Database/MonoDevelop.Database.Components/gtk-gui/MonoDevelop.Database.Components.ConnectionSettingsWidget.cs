
// This file has been generated by the GUI designer. Do not modify.
namespace MonoDevelop.Database.Components
{
	public partial class ConnectionSettingsWidget
	{
		private global::Gtk.Table table;

		private global::Gtk.Button buttonTest;

		private global::Gtk.CheckButton checkIntegratedSecurity;

		private global::Gtk.Entry entryName;

		private global::Gtk.Entry entryServer;

		private global::Gtk.Entry entryUsername;

		private global::Gtk.Expander expander;

		private global::Gtk.Table tableAdvanced;

		private global::Gtk.CheckButton checkCustom;

		private global::Gtk.Label label10;

		private global::Gtk.Label label11;

		private global::Gtk.ScrolledWindow scrolledwindow;

		private global::Gtk.TextView textConnectionString;

		private global::Gtk.SpinButton spinMaxPoolSize;

		private global::Gtk.SpinButton spinMinPoolSize;

		private global::Gtk.Label GtkLabel5;

		private global::Gtk.HBox hbox2;

		private global::Gtk.SpinButton spinPort;

		private global::Gtk.CheckButton checkDefaultPort;

		private global::Gtk.HBox hboxDatabase;

		private global::Gtk.ComboBoxEntry comboDatabase;

		private global::Gtk.Button buttonRefresh;

		private global::Gtk.Button buttonOpen;

		private global::Gtk.HBox hboxPassword;

		private global::Gtk.Entry entryPassword;

		private global::Gtk.CheckButton checkSavePassword;

		private global::Gtk.Label labelDatabase;

		private global::Gtk.Label labelName;

		private global::Gtk.Label labelPassword;

		private global::Gtk.Label labelPort;

		private global::Gtk.Label labelServer;

		private global::Gtk.Label labelTest;

		private global::Gtk.Label labelUsername;

		private global::Gtk.VBox VBoxMain;

		private global::Gtk.Label labelMessage;

		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget MonoDevelop.Database.Components.ConnectionSettingsWidget
			global::Stetic.BinContainer.Attach (this);
			this.Name = "MonoDevelop.Database.Components.ConnectionSettingsWidget";
			// Container child MonoDevelop.Database.Components.ConnectionSettingsWidget.Gtk.Container+ContainerChild
			this.table = new global::Gtk.Table (((uint)(10)), ((uint)(2)), false);
			this.table.Name = "table";
			this.table.RowSpacing = ((uint)(6));
			this.table.ColumnSpacing = ((uint)(6));
			this.table.BorderWidth = ((uint)(6));
			// Container child table.Gtk.Table+TableChild
			this.buttonTest = new global::Gtk.Button ();
			this.buttonTest.CanFocus = true;
			this.buttonTest.Name = "buttonTest";
			this.buttonTest.UseUnderline = true;
			// Container child buttonTest.Gtk.Container+ContainerChild
			global::Gtk.Alignment w1 = new global::Gtk.Alignment (0.5f, 0.5f, 0f, 0f);
			// Container child GtkAlignment.Gtk.Container+ContainerChild
			global::Gtk.HBox w2 = new global::Gtk.HBox ();
			w2.Spacing = 2;
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Image w3 = new global::Gtk.Image ();
			w3.Pixbuf = global::Stetic.IconLoader.LoadIcon (this, "gtk-apply", global::Gtk.IconSize.Menu);
			w2.Add (w3);
			// Container child GtkHBox.Gtk.Container+ContainerChild
			global::Gtk.Label w5 = new global::Gtk.Label ();
			w5.LabelProp = global::MonoDevelop.Database.AddinCatalog.GetString ("Test");
			w5.UseUnderline = true;
			w2.Add (w5);
			w1.Add (w2);
			this.buttonTest.Add (w1);
			this.table.Add (this.buttonTest);
			global::Gtk.Table.TableChild w9 = ((global::Gtk.Table.TableChild)(this.table[this.buttonTest]));
			w9.TopAttach = ((uint)(8));
			w9.BottomAttach = ((uint)(9));
			w9.XOptions = ((global::Gtk.AttachOptions)(4));
			w9.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.checkIntegratedSecurity = new global::Gtk.CheckButton ();
			this.checkIntegratedSecurity.CanFocus = true;
			this.checkIntegratedSecurity.Name = "checkIntegratedSecurity";
			this.checkIntegratedSecurity.Label = global::MonoDevelop.Database.AddinCatalog.GetString ("Use Integrated security");
			this.checkIntegratedSecurity.Active = true;
			this.checkIntegratedSecurity.DrawIndicator = true;
			this.checkIntegratedSecurity.UseUnderline = true;
			this.table.Add (this.checkIntegratedSecurity);
			global::Gtk.Table.TableChild w10 = ((global::Gtk.Table.TableChild)(this.table[this.checkIntegratedSecurity]));
			w10.TopAttach = ((uint)(5));
			w10.BottomAttach = ((uint)(6));
			w10.LeftAttach = ((uint)(1));
			w10.RightAttach = ((uint)(2));
			w10.XOptions = ((global::Gtk.AttachOptions)(4));
			w10.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.entryName = new global::Gtk.Entry ();
			this.entryName.CanDefault = true;
			this.entryName.CanFocus = true;
			this.entryName.Name = "entryName";
			this.entryName.IsEditable = true;
			this.entryName.ActivatesDefault = true;
			this.entryName.InvisibleChar = '●';
			this.table.Add (this.entryName);
			global::Gtk.Table.TableChild w11 = ((global::Gtk.Table.TableChild)(this.table[this.entryName]));
			w11.LeftAttach = ((uint)(1));
			w11.RightAttach = ((uint)(2));
			w11.XOptions = ((global::Gtk.AttachOptions)(4));
			w11.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.entryServer = new global::Gtk.Entry ();
			this.entryServer.CanFocus = true;
			this.entryServer.Name = "entryServer";
			this.entryServer.IsEditable = true;
			this.entryServer.InvisibleChar = '●';
			this.table.Add (this.entryServer);
			global::Gtk.Table.TableChild w12 = ((global::Gtk.Table.TableChild)(this.table[this.entryServer]));
			w12.TopAttach = ((uint)(1));
			w12.BottomAttach = ((uint)(2));
			w12.LeftAttach = ((uint)(1));
			w12.RightAttach = ((uint)(2));
			w12.XOptions = ((global::Gtk.AttachOptions)(4));
			w12.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.entryUsername = new global::Gtk.Entry ();
			this.entryUsername.CanFocus = true;
			this.entryUsername.Name = "entryUsername";
			this.entryUsername.IsEditable = true;
			this.entryUsername.InvisibleChar = '●';
			this.table.Add (this.entryUsername);
			global::Gtk.Table.TableChild w13 = ((global::Gtk.Table.TableChild)(this.table[this.entryUsername]));
			w13.TopAttach = ((uint)(3));
			w13.BottomAttach = ((uint)(4));
			w13.LeftAttach = ((uint)(1));
			w13.RightAttach = ((uint)(2));
			w13.XOptions = ((global::Gtk.AttachOptions)(4));
			w13.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.expander = new global::Gtk.Expander (null);
			this.expander.CanFocus = true;
			this.expander.Name = "expander";
			// Container child expander.Gtk.Container+ContainerChild
			this.tableAdvanced = new global::Gtk.Table (((uint)(4)), ((uint)(2)), false);
			this.tableAdvanced.Name = "tableAdvanced";
			this.tableAdvanced.RowSpacing = ((uint)(6));
			this.tableAdvanced.ColumnSpacing = ((uint)(6));
			this.tableAdvanced.BorderWidth = ((uint)(6));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.checkCustom = new global::Gtk.CheckButton ();
			this.checkCustom.CanFocus = true;
			this.checkCustom.Name = "checkCustom";
			this.checkCustom.Label = global::MonoDevelop.Database.AddinCatalog.GetString ("Use custom connection string");
			this.checkCustom.DrawIndicator = true;
			this.checkCustom.UseUnderline = true;
			this.tableAdvanced.Add (this.checkCustom);
			global::Gtk.Table.TableChild w14 = ((global::Gtk.Table.TableChild)(this.tableAdvanced[this.checkCustom]));
			w14.TopAttach = ((uint)(2));
			w14.BottomAttach = ((uint)(3));
			w14.RightAttach = ((uint)(2));
			w14.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.label10 = new global::Gtk.Label ();
			this.label10.Name = "label10";
			this.label10.Xalign = 0f;
			this.label10.LabelProp = global::MonoDevelop.Database.AddinCatalog.GetString ("Min Pool Size:");
			this.tableAdvanced.Add (this.label10);
			global::Gtk.Table.TableChild w15 = ((global::Gtk.Table.TableChild)(this.tableAdvanced[this.label10]));
			w15.XOptions = ((global::Gtk.AttachOptions)(4));
			w15.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.label11 = new global::Gtk.Label ();
			this.label11.Name = "label11";
			this.label11.Xalign = 0f;
			this.label11.LabelProp = global::MonoDevelop.Database.AddinCatalog.GetString ("Max Pool Size:");
			this.tableAdvanced.Add (this.label11);
			global::Gtk.Table.TableChild w16 = ((global::Gtk.Table.TableChild)(this.tableAdvanced[this.label11]));
			w16.TopAttach = ((uint)(1));
			w16.BottomAttach = ((uint)(2));
			w16.XOptions = ((global::Gtk.AttachOptions)(4));
			w16.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.scrolledwindow = new global::Gtk.ScrolledWindow ();
			this.scrolledwindow.Sensitive = false;
			this.scrolledwindow.CanFocus = true;
			this.scrolledwindow.Name = "scrolledwindow";
			this.scrolledwindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child scrolledwindow.Gtk.Container+ContainerChild
			this.textConnectionString = new global::Gtk.TextView ();
			this.textConnectionString.CanFocus = true;
			this.textConnectionString.Name = "textConnectionString";
			this.scrolledwindow.Add (this.textConnectionString);
			this.tableAdvanced.Add (this.scrolledwindow);
			global::Gtk.Table.TableChild w18 = ((global::Gtk.Table.TableChild)(this.tableAdvanced[this.scrolledwindow]));
			w18.TopAttach = ((uint)(3));
			w18.BottomAttach = ((uint)(4));
			w18.RightAttach = ((uint)(2));
			w18.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.spinMaxPoolSize = new global::Gtk.SpinButton (1, 100, 1);
			this.spinMaxPoolSize.CanFocus = true;
			this.spinMaxPoolSize.Name = "spinMaxPoolSize";
			this.spinMaxPoolSize.Adjustment.PageIncrement = 10;
			this.spinMaxPoolSize.ClimbRate = 1;
			this.spinMaxPoolSize.Numeric = true;
			this.spinMaxPoolSize.Value = 5;
			this.tableAdvanced.Add (this.spinMaxPoolSize);
			global::Gtk.Table.TableChild w19 = ((global::Gtk.Table.TableChild)(this.tableAdvanced[this.spinMaxPoolSize]));
			w19.TopAttach = ((uint)(1));
			w19.BottomAttach = ((uint)(2));
			w19.LeftAttach = ((uint)(1));
			w19.RightAttach = ((uint)(2));
			w19.XOptions = ((global::Gtk.AttachOptions)(4));
			w19.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child tableAdvanced.Gtk.Table+TableChild
			this.spinMinPoolSize = new global::Gtk.SpinButton (1, 100, 1);
			this.spinMinPoolSize.CanFocus = true;
			this.spinMinPoolSize.Name = "spinMinPoolSize";
			this.spinMinPoolSize.Adjustment.PageIncrement = 10;
			this.spinMinPoolSize.ClimbRate = 1;
			this.spinMinPoolSize.Numeric = true;
			this.spinMinPoolSize.Value = 1;
			this.tableAdvanced.Add (this.spinMinPoolSize);
			global::Gtk.Table.TableChild w20 = ((global::Gtk.Table.TableChild)(this.tableAdvanced[this.spinMinPoolSize]));
			w20.LeftAttach = ((uint)(1));
			w20.RightAttach = ((uint)(2));
			w20.XOptions = ((global::Gtk.AttachOptions)(4));
			w20.YOptions = ((global::Gtk.AttachOptions)(4));
			this.expander.Add (this.tableAdvanced);
			this.GtkLabel5 = new global::Gtk.Label ();
			this.GtkLabel5.Name = "GtkLabel5";
			this.GtkLabel5.LabelProp = global::MonoDevelop.Database.AddinCatalog.GetString ("Advanced");
			this.GtkLabel5.UseUnderline = true;
			this.expander.LabelWidget = this.GtkLabel5;
			this.table.Add (this.expander);
			global::Gtk.Table.TableChild w22 = ((global::Gtk.Table.TableChild)(this.table[this.expander]));
			w22.TopAttach = ((uint)(7));
			w22.BottomAttach = ((uint)(8));
			w22.RightAttach = ((uint)(2));
			w22.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.hbox2 = new global::Gtk.HBox ();
			this.hbox2.Name = "hbox2";
			this.hbox2.Spacing = 6;
			// Container child hbox2.Gtk.Box+BoxChild
			this.spinPort = new global::Gtk.SpinButton (1, 65535, 1);
			this.spinPort.CanFocus = true;
			this.spinPort.Name = "spinPort";
			this.spinPort.Adjustment.PageIncrement = 10;
			this.spinPort.ClimbRate = 1;
			this.spinPort.Numeric = true;
			this.spinPort.Value = 1;
			this.hbox2.Add (this.spinPort);
			global::Gtk.Box.BoxChild w23 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.spinPort]));
			w23.Position = 0;
			// Container child hbox2.Gtk.Box+BoxChild
			this.checkDefaultPort = new global::Gtk.CheckButton ();
			this.checkDefaultPort.CanFocus = true;
			this.checkDefaultPort.Name = "checkDefaultPort";
			this.checkDefaultPort.Label = global::MonoDevelop.Database.AddinCatalog.GetString ("Use default port");
			this.checkDefaultPort.DrawIndicator = true;
			this.checkDefaultPort.UseUnderline = true;
			this.hbox2.Add (this.checkDefaultPort);
			global::Gtk.Box.BoxChild w24 = ((global::Gtk.Box.BoxChild)(this.hbox2[this.checkDefaultPort]));
			w24.Position = 1;
			w24.Expand = false;
			w24.Fill = false;
			this.table.Add (this.hbox2);
			global::Gtk.Table.TableChild w25 = ((global::Gtk.Table.TableChild)(this.table[this.hbox2]));
			w25.TopAttach = ((uint)(2));
			w25.BottomAttach = ((uint)(3));
			w25.LeftAttach = ((uint)(1));
			w25.RightAttach = ((uint)(2));
			w25.XOptions = ((global::Gtk.AttachOptions)(4));
			w25.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.hboxDatabase = new global::Gtk.HBox ();
			this.hboxDatabase.Name = "hboxDatabase";
			this.hboxDatabase.Spacing = 6;
			// Container child hboxDatabase.Gtk.Box+BoxChild
			this.comboDatabase = global::Gtk.ComboBoxEntry.NewText ();
			this.comboDatabase.Name = "comboDatabase";
			this.hboxDatabase.Add (this.comboDatabase);
			global::Gtk.Box.BoxChild w26 = ((global::Gtk.Box.BoxChild)(this.hboxDatabase[this.comboDatabase]));
			w26.Position = 0;
			// Container child hboxDatabase.Gtk.Box+BoxChild
			this.buttonRefresh = new global::Gtk.Button ();
			this.buttonRefresh.CanFocus = true;
			this.buttonRefresh.Name = "buttonRefresh";
			this.buttonRefresh.UseStock = true;
			this.buttonRefresh.UseUnderline = true;
			this.buttonRefresh.Label = "gtk-refresh";
			this.hboxDatabase.Add (this.buttonRefresh);
			global::Gtk.Box.BoxChild w27 = ((global::Gtk.Box.BoxChild)(this.hboxDatabase[this.buttonRefresh]));
			w27.Position = 1;
			w27.Expand = false;
			w27.Fill = false;
			// Container child hboxDatabase.Gtk.Box+BoxChild
			this.buttonOpen = new global::Gtk.Button ();
			this.buttonOpen.CanFocus = true;
			this.buttonOpen.Name = "buttonOpen";
			this.buttonOpen.UseStock = true;
			this.buttonOpen.UseUnderline = true;
			this.buttonOpen.Label = "gtk-open";
			this.hboxDatabase.Add (this.buttonOpen);
			global::Gtk.Box.BoxChild w28 = ((global::Gtk.Box.BoxChild)(this.hboxDatabase[this.buttonOpen]));
			w28.Position = 2;
			w28.Expand = false;
			w28.Fill = false;
			this.table.Add (this.hboxDatabase);
			global::Gtk.Table.TableChild w29 = ((global::Gtk.Table.TableChild)(this.table[this.hboxDatabase]));
			w29.TopAttach = ((uint)(6));
			w29.BottomAttach = ((uint)(7));
			w29.LeftAttach = ((uint)(1));
			w29.RightAttach = ((uint)(2));
			w29.XOptions = ((global::Gtk.AttachOptions)(4));
			w29.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.hboxPassword = new global::Gtk.HBox ();
			this.hboxPassword.Name = "hboxPassword";
			this.hboxPassword.Spacing = 6;
			// Container child hboxPassword.Gtk.Box+BoxChild
			this.entryPassword = new global::Gtk.Entry ();
			this.entryPassword.CanFocus = true;
			this.entryPassword.Name = "entryPassword";
			this.entryPassword.IsEditable = true;
			this.entryPassword.Visibility = false;
			this.entryPassword.InvisibleChar = '●';
			this.hboxPassword.Add (this.entryPassword);
			global::Gtk.Box.BoxChild w30 = ((global::Gtk.Box.BoxChild)(this.hboxPassword[this.entryPassword]));
			w30.Position = 0;
			// Container child hboxPassword.Gtk.Box+BoxChild
			this.checkSavePassword = new global::Gtk.CheckButton ();
			this.checkSavePassword.CanFocus = true;
			this.checkSavePassword.Name = "checkSavePassword";
			this.checkSavePassword.Label = global::MonoDevelop.Database.AddinCatalog.GetString ("Save Password");
			this.checkSavePassword.Active = true;
			this.checkSavePassword.DrawIndicator = true;
			this.checkSavePassword.UseUnderline = true;
			this.hboxPassword.Add (this.checkSavePassword);
			global::Gtk.Box.BoxChild w31 = ((global::Gtk.Box.BoxChild)(this.hboxPassword[this.checkSavePassword]));
			w31.Position = 1;
			w31.Expand = false;
			this.table.Add (this.hboxPassword);
			global::Gtk.Table.TableChild w32 = ((global::Gtk.Table.TableChild)(this.table[this.hboxPassword]));
			w32.TopAttach = ((uint)(4));
			w32.BottomAttach = ((uint)(5));
			w32.LeftAttach = ((uint)(1));
			w32.RightAttach = ((uint)(2));
			w32.XOptions = ((global::Gtk.AttachOptions)(4));
			w32.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.labelDatabase = new global::Gtk.Label ();
			this.labelDatabase.Name = "labelDatabase";
			this.labelDatabase.Xalign = 0f;
			this.labelDatabase.LabelProp = global::MonoDevelop.Database.AddinCatalog.GetString ("Database:");
			this.table.Add (this.labelDatabase);
			global::Gtk.Table.TableChild w33 = ((global::Gtk.Table.TableChild)(this.table[this.labelDatabase]));
			w33.TopAttach = ((uint)(6));
			w33.BottomAttach = ((uint)(7));
			w33.XOptions = ((global::Gtk.AttachOptions)(4));
			w33.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.labelName = new global::Gtk.Label ();
			this.labelName.Name = "labelName";
			this.labelName.Xalign = 0f;
			this.labelName.LabelProp = global::MonoDevelop.Database.AddinCatalog.GetString ("Name:");
			this.table.Add (this.labelName);
			global::Gtk.Table.TableChild w34 = ((global::Gtk.Table.TableChild)(this.table[this.labelName]));
			w34.XOptions = ((global::Gtk.AttachOptions)(4));
			w34.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.labelPassword = new global::Gtk.Label ();
			this.labelPassword.Name = "labelPassword";
			this.labelPassword.Xalign = 0f;
			this.labelPassword.LabelProp = global::MonoDevelop.Database.AddinCatalog.GetString ("Password:");
			this.table.Add (this.labelPassword);
			global::Gtk.Table.TableChild w35 = ((global::Gtk.Table.TableChild)(this.table[this.labelPassword]));
			w35.TopAttach = ((uint)(4));
			w35.BottomAttach = ((uint)(5));
			w35.XOptions = ((global::Gtk.AttachOptions)(4));
			w35.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.labelPort = new global::Gtk.Label ();
			this.labelPort.Name = "labelPort";
			this.labelPort.Xalign = 0f;
			this.labelPort.LabelProp = global::MonoDevelop.Database.AddinCatalog.GetString ("Port:");
			this.table.Add (this.labelPort);
			global::Gtk.Table.TableChild w36 = ((global::Gtk.Table.TableChild)(this.table[this.labelPort]));
			w36.TopAttach = ((uint)(2));
			w36.BottomAttach = ((uint)(3));
			w36.XOptions = ((global::Gtk.AttachOptions)(4));
			w36.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.labelServer = new global::Gtk.Label ();
			this.labelServer.Name = "labelServer";
			this.labelServer.Xalign = 0f;
			this.labelServer.LabelProp = global::MonoDevelop.Database.AddinCatalog.GetString ("Server:");
			this.table.Add (this.labelServer);
			global::Gtk.Table.TableChild w37 = ((global::Gtk.Table.TableChild)(this.table[this.labelServer]));
			w37.TopAttach = ((uint)(1));
			w37.BottomAttach = ((uint)(2));
			w37.XOptions = ((global::Gtk.AttachOptions)(4));
			w37.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.labelTest = new global::Gtk.Label ();
			this.labelTest.Name = "labelTest";
			this.labelTest.Xalign = 0f;
			this.labelTest.Wrap = true;
			this.table.Add (this.labelTest);
			global::Gtk.Table.TableChild w38 = ((global::Gtk.Table.TableChild)(this.table[this.labelTest]));
			w38.TopAttach = ((uint)(8));
			w38.BottomAttach = ((uint)(9));
			w38.LeftAttach = ((uint)(1));
			w38.RightAttach = ((uint)(2));
			w38.XOptions = ((global::Gtk.AttachOptions)(4));
			w38.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.labelUsername = new global::Gtk.Label ();
			this.labelUsername.Name = "labelUsername";
			this.labelUsername.Xalign = 0f;
			this.labelUsername.LabelProp = global::MonoDevelop.Database.AddinCatalog.GetString ("Username:");
			this.table.Add (this.labelUsername);
			global::Gtk.Table.TableChild w39 = ((global::Gtk.Table.TableChild)(this.table[this.labelUsername]));
			w39.TopAttach = ((uint)(3));
			w39.BottomAttach = ((uint)(4));
			w39.XOptions = ((global::Gtk.AttachOptions)(4));
			w39.YOptions = ((global::Gtk.AttachOptions)(4));
			// Container child table.Gtk.Table+TableChild
			this.VBoxMain = new global::Gtk.VBox ();
			this.VBoxMain.Name = "VBoxMain";
			this.VBoxMain.Spacing = 6;
			// Container child VBoxMain.Gtk.Box+BoxChild
			this.labelMessage = new global::Gtk.Label ();
			this.labelMessage.Name = "labelMessage";
			this.labelMessage.UseMarkup = true;
			this.VBoxMain.Add (this.labelMessage);
			global::Gtk.Box.BoxChild w40 = ((global::Gtk.Box.BoxChild)(this.VBoxMain[this.labelMessage]));
			w40.Position = 0;
			w40.Fill = false;
			this.table.Add (this.VBoxMain);
			global::Gtk.Table.TableChild w41 = ((global::Gtk.Table.TableChild)(this.table[this.VBoxMain]));
			w41.TopAttach = ((uint)(9));
			w41.BottomAttach = ((uint)(10));
			w41.RightAttach = ((uint)(2));
			w41.XOptions = ((global::Gtk.AttachOptions)(4));
			this.Add (this.table);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.Show ();
			this.entryPassword.Changed += new global::System.EventHandler (this.PasswordChanged);
			this.buttonRefresh.Clicked += new global::System.EventHandler (this.RefreshClicked);
			this.buttonOpen.Clicked += new global::System.EventHandler (this.OpenClicked);
			this.spinPort.Changed += new global::System.EventHandler (this.PortChanged);
			this.checkDefaultPort.Toggled += new global::System.EventHandler (this.OnCheckDefaultPortToggled);
			this.spinMinPoolSize.Changed += new global::System.EventHandler (this.MinPoolSizeChanged);
			this.spinMaxPoolSize.Changed += new global::System.EventHandler (this.MaxPoolSizeChanged);
			this.entryUsername.Changed += new global::System.EventHandler (this.UsernameChanged);
			this.entryServer.Changed += new global::System.EventHandler (this.ServerChanged);
			this.entryName.Changed += new global::System.EventHandler (this.NameChanged);
			this.checkIntegratedSecurity.Toggled += new global::System.EventHandler (this.OnCheckIntegratedSecurityToggled);
			this.buttonTest.Clicked += new global::System.EventHandler (this.TestClicked);
		}
	}
}
